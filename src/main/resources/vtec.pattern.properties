## config file, vtec.pattern.properties, suggested usage in java being
#
# String regexForVTEC = new  org.apache.commons.configuration.
#                            PropertiesConfiguration("vtec.pattern.properties").getString("vtec.pattern")
#	
# java.regex.Pattern pattern = Pattern.compile(regexForVTEC);
#
# java.regex.Matcher matcher = pattern.matcher(NWS_Bulletin_As_Text_String);
#		
# while (matcher.find())
# {
#   String vtec = matcher.group();
# }
#
#  This pattern extracts any number of /P-VTEC/ in a body of, each possibly followed by an optional /H-VTEC/. 
#  Tested at http://myregexp.com/signedJar.html using full length NWS Weather Bulletins. 
#  
#  
#  Natural language description of the VTEC Regex is as follows - 
#    Forward slash character, followed by
#    Product Class code - O, T, E or X, followed by dot, followed by
#    Action code - NEW, CON, etc, followed by dot, followed by 
#    Office ID - a size 1 to 4 (or exact 4?) upper case code, followed by dot, followed by 
#    Phenomena Code - two upper case characters, followed by dot, followed by 
#    Significance character W, A, Y, S, F, O, N, followed by dot, followed by
#    Event tracking number - exactly four digits, followed by dot, followed by
#    Begin Date - exactly six digits, followed by T, followed by exactly four digits, followed by Z, 
#                 followed by DASH (not dot), followed by
#    End Date - exactly six digits, followed by T, followed by exactly four digits, followed by Z, followed by
#    Forward slash character, optionally (hence open parentheses) followed by 
#       any number of characters that are not a forward slash, followed by 
#       Forward Slash, followed by
#       NWS Location Identifier of exactly 5 characters length followed by dot, followed by
#       Flood Severity - N, 0-3, U followed by dot, followed by
#       Immediate Cause - a two upper-case character code followed by dot, followed by
#       three dot separated Zulu date fields as followed by 
#       Flood Record Status followed by slash and close parentheses followed by 
#       question mark to signify optional
#
#   Notes:
#   
#   The logic, "any number of characters that are not a forward slash", expressed in regex as [^/]* 
#   is critical to ensuring parent-child relation between H-VTEC and the immediately preceding P-VTEC 
#   (and not any preceding P-VTEC).
#
#   Phenomena and Immediate Cause codes are modeled as any two letter upper-case, should be good enough \u2013 
#   but can be made more exact by creating a character alternation regular expression class such as
#   (AF|AS|...|ZR) and (ER|...|UU), respectively.
#
#   CAUTION :   Must escape the backslash for java.lang.String i.e. not \w metacharater, but \\w instead.  
#   When testing at, say, myregexp.com, or using another programming language lie Perl, restore the \w 
#   metacharacters in the java string below...(thanks to User Suamere on Stackoverflow for some refinements):  
#
#/
#vtec.pattern=[/][OTEX][.](NEW|CON|EXT|EXA|EXB|UPG|CAN|EXP|COR|ROU)[.][\\w]{4}[.][A-Z][A-Z][.][WAYSFON][.][0-9]{4}[.][0-9]{6}[T][0-9]{4}[Z][-][0-9]{6}[T][0-9]{4}[Z][/]([^/]*[/][\\w]{5}[.][[N0-3U]][.][A-Z][A-Z][.][0-9]{6}[T][0-9]{4}[Z][.][0-9]{6}[T][0-9]{4}[Z][.][0-9]{6}[T][0-9]{4}[Z][.](NO|NR|UU|OO)[/])?
#  Cleaned up per User Suamere on Stackoverflow,   http://stackoverflow.com/users/1831054/suamere
vtec.pattern=/[OTEX]\\.(NEW|CON|EXT|EXA|EXB|UPG|CAN|EXP|COR|ROU)\\.[\\w]{4}[.][A-Z][A-Z]\\.[WAYSFON]\\.[\\d]{4}\\.[\\d]{6}[T][\\d]{4}[Z]-[\\d]{6}[T][\\d]{4}[Z][/]([^/]*/[\\w]{5}\\.[[0-3NU]]\\.[A-Z][A-Z]\\.[\\d]{6}[T][\\d]{4}[Z]\\.[\\d]{6}[T][\\d]{4}[Z]\\.[\\d]{6}[T][\\d]{4}[Z]\\.(NO|NR|UU|OO)/)?